---
version: "3.7"
x-env: &default-env
  TZ: ${C_TZ}

x-labels: &prom-labels
  - prometheus-instance=${C_PROMETHEUS_NAME:?err}
  - prometheus-job=cadvisor


networks:
  monitoring:
    name: monitoring
    driver: ${C_NETWORK_DRIVER:-"overlay"}

volumes:
  prometheus-data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    # Needs access to the docker socket
    user: root
    environment: *default-env
    volumes:
      - ./prometheus.swarm.yml:/etc/prometheus/prometheus.yml.tmpl:ro
      - prometheus-data:/prometheus
      - /run/docker.sock:/run/docker.sock:ro
    # https://github.com/prometheus/prometheus/issues/2357#issuecomment-368598151
    entrypoint: /bin/sh
    command:
      - '-c'
      - "sed s/'{{ prometheus_self_name }}'/${C_PROMETHEUS_NAME:?err}/g /etc/prometheus/prometheus.yml.tmpl
        > /etc/prometheus/prometheus.yml && /bin/prometheus
        --log.level=info
        --config.file=/etc/prometheus/prometheus.yml
        --storage.tsdb.path=/prometheus
        --storage.tsdb.retention.time=1d
        --web.console.libraries=/usr/share/prometheus/console_libraries
        --web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:9090:9090/tcp"
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    networks:
      - monitoring
    command: '-docker_only'
    deploy:
      mode: global
      labels:
        - prometheus-job=cadvisor
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /:/rootfs:ro
      - /run:/run:rw
      - /sys:/sys:ro
      - /run/docker.sock:/run/docker.sock:ro
      - /var/lib/docker:/var/lib/docker:ro
