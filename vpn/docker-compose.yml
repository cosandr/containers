version: "3.7"

x-env: &default-env
  TZ: ${C_TZ}
  PUID: ${C_UID}
  PGID: ${C_GID}

x-vpn-check: &vpn-check
  test: "ping -c1 -W1 vpn"
  interval: 5m
  timeout: 10s
  retries: 3
  start_period: 10s

networks:
  vpn: {}

services:
  vpn:
    # https://haugene.github.io/docker-transmission-openvpn/
    image: docker.io/haugene/transmission-openvpn:5
    container_name: vpn
    cap_add:
      - NET_ADMIN
      # - NET_RAW  # podman
      # - MKNOD    # podman, if CREATE_TUN_DEVICE worked
    networks:
      - vpn
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: "ping -c1 -W1 google.com"
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 10s
    # devices:
    #   # Required to avoid (podman)
    #   # ERROR: Cannot open TUN/TAP dev /dev/net/tun: Operation not permitted (errno=1)
    #   - "/dev/net/tun:/dev/net/tun"
    environment:
      <<: *default-env
      CREATE_TUN_DEVICE: "true"  # Set to true if on Docker
      ENABLE_UFW: "false"  # Can't get port forwarding to work
      LOCAL_NETWORK: "${C_HOST_NET:?err}"
      OPENVPN_CONFIG: "se.protonvpn.net.udp"
      OPENVPN_OPTS: "--inactive 3600 --ping 10 --ping-exit 60"
      # https://haugene.github.io/docker-transmission-openvpn/faq/#send_username_and_password_via_a_file
      # Place username (add +pmp) and password in /config/openvpn-credentials.txt, one per line
      OPENVPN_USERNAME: "**None**"
      OPENVPN_PASSWORD: "**None**"
      OPENVPN_PROVIDER: "ProtonVPN"
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_RATIO_LIMIT: "5"
      TRANSMISSION_WEB_UI: "transmission-web-control"
      TRANSMISSION_UMASK: "022"
      UFW_EXTRA_PORTS: "9091,7878,8989,8686,5800"
      WEBPROXY_ENABLED: "false"
    volumes:
      - ${C_DOWNLOADS:?err}/transmission:/data
      - ./data/transmission:/config
      - ./scripts:/scripts:ro
    ports:
      - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:5800:5800" # firefox
      - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:8989:8989" # sonarr
      - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:9091:9091" # transmission
      - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:9696:9696" # prowlarr
      # - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:7878:7878" # radarr
      # - "${C_PORT_BIND_ADDRESS:-0.0.0.0}:8686:8686" # lidarr
    restart: "always"
    security_opt:
      - label=disable  # podman

  prowlarr:
    image: docker.io/linuxserver/prowlarr:latest
    network_mode: "service:vpn"
    container_name: vpn-prowlarr
    healthcheck: *vpn-check
    depends_on:
      - vpn
    environment:
      <<: *default-env
      UMASK_SET: "022"
    volumes:
      - ./data/prowlarr:/config
    restart: "always"
    security_opt:
      - label=disable  # podman

  radarr:
    image: docker.io/linuxserver/radarr:latest
    network_mode: "service:vpn"
    container_name: vpn-radarr
    healthcheck: *vpn-check
    depends_on:
      - vpn
    environment:
      <<: *default-env
      UMASK_SET: "022"
    volumes:
      - ./data/radarr:/config
      - ${C_DOWNLOADS:?err}/transmission:/data
      - ${C_MEDIA:?err}/movies:/movies
    restart: "always"
    security_opt:
      - label=disable  # podman

  sonarr:
    image: docker.io/linuxserver/sonarr:latest
    network_mode: "service:vpn"
    container_name: vpn-sonarr
    healthcheck:
      test: "nc -vz vpn 9091"
      <<: *vpn-check
    depends_on:
      - vpn
    environment:
      <<: *default-env
      UMASK_SET: "022"
    volumes:
      - ./data/sonarr:/config
      - ${C_DOWNLOADS:?err}/transmission:/data
      - ${C_MEDIA:?err}/shows:/shows
    restart: "always"
    security_opt:
      - label=disable  # podman

  lidarr:
    image: docker.io/linuxserver/lidarr:latest
    network_mode: "service:vpn"
    container_name: vpn-lidarr
    healthcheck: *vpn-check
    depends_on:
      - vpn
    environment:
      <<: *default-env
      UMASK_SET: "022"
    volumes:
      - ./data/lidarr:/config
      - ${C_DOWNLOADS:?err}/transmission:/data
      - ${C_MEDIA:?err}/music:/music
    restart: "always"
    security_opt:
      - label=disable  # podman

  firefox:
    image: docker.io/jlesage/firefox:latest
    container_name: vpn-firefox
    network_mode: "service:vpn"
    depends_on:
      - vpn
    healthcheck: *vpn-check
    environment:
      TZ: ${C_TZ}
      USER_ID: ${C_UID}
      GROUP_ID: ${C_GID}
      UMASK_SET: "027"
      KEEP_APP_RUNNING: "1"
      DISPLAY_WIDTH: "1280"
      DISPLAY_HEIGHT: "1024"
    shm_size: 2G
    volumes:
      - ./data/firefox:/config
    restart: "always"
    security_opt:
      - label=disable  # podman
      - seccomp=./seccomp.json
